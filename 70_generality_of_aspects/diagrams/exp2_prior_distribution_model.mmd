flowchart LR
    %% Aspects to apply
    %%hyperbolicDecay>Apply hyperbolic decay to\ncharacter choice reasoning]
    %%updateConfidenceModel>Update Confidence Model]
    setupPriorDistribution>Set up prior distribution\nof character preferences]
    fuzzLearningByPriorDistribution>Select characters\nby prior distribution]
    %%chooseBasedOnConfidence>Select characters\nby confidence sigmoid]
    recordChoices>Record character choices]
    trackGameOutcome>Track game outcome]
    recordWinningPair>Record winning character pair\nobserved by players]
    ensureBestMove>Select best move\nfor players]
    cannotWin>Handle non-winnable state]
    
    %% CSS classes for aspects
    %%class hyperbolicDecay aspect
    %%class updateConfidenceModel aspect
    class setupPriorDistribution aspect
    class fuzzLearningByPriorDistribution aspect
    %%class chooseBasedOnConfidence aspect
    class recordChoices aspect
    class trackGameOutcome aspect
    class recordWinningPair aspect
    class ensureBestMove aspect
    class cannotWin aspect
    
    class setupPriorDistribution priorDistributionModel
    class fuzzLearningByPriorDistribution priorDistributionModel
    
    %% Gameplay steps
    pickChars(Each player selects characters)
    assignFirst(Randomly assign active player\nfor game start)
    takeTurn(Active player takes turn randomly)
    swapActive(Active player switches to\nother player)
    gameEndedCheck{{Is active player exhausted?}}
    gameEnd((Game ends\nActive player lost\nNon-active player won))

    %% Activity Diagram start/end
    procStart((Start))
    procEnd((End))

    %% Aspects to apply
    %%hyperbolicDecay -.->pickChars
    %%updateConfidenceModel -.-> pickChars
    setupPriorDistribution -.-> pickChars
    fuzzLearningByPriorDistribution -.-> pickChars
    %%chooseBasedOnConfidence -.-> pickChars
    recordChoices -.-> gameplay
    trackGameOutcome -.-> gameplay
    recordWinningPair -.-> gameplay
    ensureBestMove -.-> gameplay

    cannotWin -.-> takeTurn

    %% Gameplay graph
    subgraph gameplay [RPGLite Game]
        procStart-->pickChars
        gameEnd-->procEnd
        pickChars --> assignFirst --> takeTurn --> swapActive --> gameEndedCheck -- Yes --> gameEnd
        gameEndedCheck -- no --> takeTurn
    end