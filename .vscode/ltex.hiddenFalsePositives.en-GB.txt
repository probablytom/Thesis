{"rule":"ADVERB_WORD_ORDER","sentence":"^\\QThey conclude that the benefits touted by AOP are a myth repeated often enough to be believed, but point to many papers which suggest improvements to the standard AOP approach which might reduce it's negative impact or make it more practically viable.\\E$"}
{"rule":"THE_SENT_END","sentence":"^\\QNotably, the implementation discussed is a Java implementation, rather than the .\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QNet implementation presented in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QThe definition defines “AOBPMN”, a formalised dialect of BPMN supporting aspect orientation with precedence.\\E$"}
{"rule":"SO_AS_TO","sentence":"^\\QProcess changes might describe attempts to circumvent security protocols, laziness or confusion in a human actor within the model, or random “noise” so as to produce synthetic log traces containing aberrations which mimic those found in noisy empirical datasets.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QDiscussion of Variation & Motivations for Variations in Process Models variation_sm_motivations\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QRepresenting Variations in Process Models and their Outputs variations_in_sm\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QA weakness of the work is that model and trace modifications are relatively rudimentary: processes can be added or removed, but complex graph transformations are presumably only permissible when representable through the composition of the mutation primitives they provide, on which there are only three for processes: swapping AND and XOR definitions of process gateways, and swapping process order.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QResearch Questions rqs\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QEeep!\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QProcess Variance in Simulation & Data Generation dynamism_in_sm\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QAspect Orientation & Business Process Modelling ao_and_bpm_review\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QThey find that AOP provides an intuitive and straightforward method by which simulated experimental systems can be composed, and that MAML's simplicity and its philosophy on modelling are more “satisfactory” than Swarm's standard approach, though the paper betrays that its implementation was more complex than initially conceived: the patch unix tool was intended for use as their weaver, though the team eventually developed a transpiler from MAML to Swarm instead (which they name xmc.).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QThey also call for more generally theoretical AOP research, which mirrors the requests some critics of aspect orientation reasearch make (as noted in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QAspect Orientation in Simulation & Modelling ao_and_modelling\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QCriticisms of aspect-oriented programming aop-criticisms\\E$"}
{"rule":"NON_STANDARD_WORD","sentence":"^\\QAn “aspect” is constructed by composing this advice with “point cut”s: sets of join points that define all moments in program execution where associated advice is intended to be invoked.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE_2","sentence":"^\\QNu's design is explained and its implementation presented, which are designed to promote granularity in join point specification.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE_2","sentence":"^\\QNu's design is explained and its implementation presented, which aim to promote granularity in join point specification.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QIn order to demonstrate Bind's approach to simplifying post-weave codebases, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q present “Nu”, an framework written in .NET supporting Bind.\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QA further weakness of the work is that model and trace modification techniques are limited: processes can be added or removed, but complex graph transformations are only permissible when representable through the composition of the mutation primitives they provide, on which there are only three for processes: swapping AND and XOR definitions of process gateways, and swapping process order.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qfuzz_function retrieves the abstract syntax tree (“AST”) of the target, a tree representation of the Python code implementing the target.\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QConsider moving some code snippets like those of Fuzzi-Moss, which aren't necessarily that important in the grand scope of the thesis, to an appendix.\\E$"}
{"rule":"CHANCE_CHANGE","sentence":"^\\QTwo probability mass functions representing the chance that behaviour is to be altered given a length of time and an actor's: conscientiousness, a lack of which would increase chance of behavioural adaptation due to lack of effort; concentration, a lack of which would increase chance of behavioural adaptation due to distraction A missed_target fuzzer, which terminated a while loop early if activated via a probability mass function of an actor's propensity for negligence.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qis a project defining a model of time against which actors in sociotechnical models & simulations can act \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qis a workflow oriented agent based simulation environment.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qis designed to enable experimenters to specify readable workflows directly as collections of related methods organised into Plain Old Python Classes that are executed by the agents in the simulation.\\E$"}
{"rule":"APOS_SPACE_CONTRACTION","sentence":"^\\QThe central metaphor underlying 's model of timing is theatrical: actors in a simulation or model are members of a “cast” (a collection of actors) who enact a “workflow” (simulation steps) in a “scene” (domain model within which the actors interact).\\E$"}
{"rule":"APOS_SPACE_CONTRACTION","sentence":"^\\QThe theatrical model introduces is the context for 's nomenclature for its types of advice: “prelude” advice happens before a task and “encore” advice is invoked afterward, as a prelude and encore would be in a literal theatre.\\E$"}
{"rule":"APOS_SPACE_CONTRACTION","sentence":"^\\QThe theatrical model introduces is the context for 's nomenclature for its types of advice: “prelude” advice happens before a task and “encore” advice is invoked afterward as a prelude and encore would be in a literal theatre.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qhas been used as the environment in models of TCP/IP, algorithmic trading, the spread of disease \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, and the impact of behavioural variation in software engineering methodologies as described in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QThe study began with a “naive” model of software engineers following each paradigm, developed in Python using , , and Fuzzi-Moss.\\E$"}
{"rule":"DOUBLE_PUNCTUATION","sentence":"^\\QThe study began with a “naive” model of software engineers following each paradigm, developed in Python using , , and Fuzzi-Moss.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QThis model was then augmented aspectually using .\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QIf the PMF activated, the workflow step invoked at that moment was truncated using .\\E$"}
{"rule":"APOS_SPACE_CONTRACTION","sentence":"^\\QThe existing case study employing demonstrated that realistic model features could be separated from their core codebase, and gave credence to 's use as a tool for aspectually augmenting models with behavioural variance.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QAs discussed in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, 's implementation at the time was a proof-of-concept which, while successfully demonstrating the potential of aspect-oriented runtime metaprogramming, was also inefficient, feature-incomplete, and lacked compatibility with modern software engineering tooling.\\E$"}
{"rule":"ATD_VERBS_TO_COLLOCATION","sentence":"^\\QPrior Work.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QMotivations in originally implementing .\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qwas originally developed for the representation of behavioural variance in systems, and was first produced as a proof-of-concept.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qwas developed to fulfil this requirement, so that behavioural variance in simulation could be modelled as described and subsequently studied.\\E$"}
{"rule":"APOS_SPACE_CONTRACTION","sentence":"^\\QFor this reason the weaving mechanism will be described within the context of 's original design.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QHowever, 's original incarnation predates this refactoring — it was rewritten during this PhD, and early case studies use the older version of the tool (see \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QObjects are, in essence, implemented as a dictionary (Python's name for what other languages might call a map or hashmap) with string keys.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QThis means that the expression someObject.val is notionally equivalent to someObject.__dict__['val'], though the subtleties of this mechanism will be explained later.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QFor example, the expression objA == objB is interpreted by Python as objA.__eq__(objB).\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qweaves aspect hooks into classes by taking advantage of these three properties of Python.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QThe replaced attribute lookup logic implements the aspect hook woven by .\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QHooks are applied to a class by way of an invocation to a function, fuzz_clazz, which takes a class as a parameter and weaves aspect hooks into that class \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qfuzz_clazz replaces the __getattribute__ method of the class with a new function object which it constructs.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qfuzz_clazz replaces the __getattribute__ method of the class with a new function object which it constructs.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qachieves this through a special type of “before”-style aspect termed a “fuzzer”.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qlibraries typically support advice woven before, around, or after a join point; modifying the join point itself essentially allows changes inside its definition, introducing a fourth type of weaving.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QIt sought to support models where a (potentially non-deterministic) change to the behaviour was required, and enable it to apply that change dynamically during execution in an fashion.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Q30_prior_work/snippets/fuzz_clazz.py The implementation of fuzz_clazz, a function which replaces __getattribute__ on Python 2 objects to return callable attributes wrapped within an aspect hook implementation.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QAs can be seen in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, fuzzing aspects are implemented by way of “prelude” advice ( nomenclature for advice run before a target invocation, inspired by early work on , which is discussed in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QThis chapter briefly outlines the new implementation of , discusses improvements made to design and performance, and explains some contributions made to the design of aspect orientation frameworks which addresses some core issues raised with the paradigmRewrite chapter outline after the structure of the chapter is known to be OK..\\E$"}
{"rule":"DOUBLE_PUNCTUATION","sentence":"^\\QThis chapter briefly outlines the new implementation of , discusses improvements made to design and performance, and explains some contributions made to the design of aspect orientation frameworks which addresses some core issues raised with the paradigmRewrite chapter outline after the structure of the chapter is known to be OK..\\E$"}
{"rule":"APOS_SPACE_CONTRACTION","sentence":"^\\QAfter developing the original study using 's original implementation, it became clear that an iteration on its design was required.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qgrew out of an undergraduate project, and accrued technical debt as a result of being written under time constraints with little experience.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QAs several requirements were left unfulfilled by the original implementation of , a new implementation satisfying them was deemed necessary.\\E$"}
{"rule":"APOS_SPACE_CONTRACTION","sentence":"^\\QNo optimisations were made pertaining to this, but compilation and abstract syntax tree editing have the potential to be 's most expensive operations.\\E$"}
{"rule":"THE_MOST","sentence":"^\\QNo optimisations were made pertaining to this, but compilation and abstract syntax tree editing have the potential to be 's most expensive operations.\\E$"}
{"rule":"APOS_SPACE_CONTRACTION","sentence":"^\\QAs discussed in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, replacing __getattribute__ in 's original implementation allowed for hooks to be woven at runtime into possible targets of advice.\\E$"}
{"rule":"APOS_SPACE_CONTRACTION","sentence":"^\\QIn addition, use of the function overrides previous calls to it, meaning that any debuggers used by a user of would be replaced with 's functionality, which was deemed untenable.\\E$"}
{"rule":"APOS_SPACE_CONTRACTION","sentence":"^\\QFor this reason it is important to have a mechanism to enable and disable the weaving of aspect hooks for a given import statement, requiring a mechanism to enable and disable 's modified import logic.\\E$"}
{"rule":"APOS_SPACE_CONTRACTION","sentence":"^\\QAs these are important for 's weaving implementation, an explanation of Python's with keyword follows in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q alongside a more technical discussion of weaving and the nature of the aspect hooks applies.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QMonkey-patching builtins.__import__ is as simple as replacing the __import__ function object with a new one, which changes the behaviour of Python's import keyword.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QPython's functionality for importing modules is managed by builtins.__import__, which receives module names as strings and handles package resolution; by monkey-patching the import system, modules can be modified during the process of importing.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QAs this technique allows for control over where aspect hooks are applied, can target only function and method objects to apply aspect hooks to, avoiding the overhead its previous iteration introduced when applying hooks to all attribute lookups including non-callables, such as variables or Class objects.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qa new version of __getattribute__ with hooks for weaving aspects, the rewritten method could be patched to the object itself at a deeper level than used in the original implementation.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QThis chapter briefly outlines the new implementation of , discusses improvements made to design and performance, and explains some contributions made to the design of aspect orientation frameworks which addresses some core issues raised with the paradigmRewrite chapter outline after the structure of the chapter is known to be OK..\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QRewriting .\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Qcaches the original builtins.__import__ object in an instance of the class, and replaces it with AspectHooks.__import__, in its __enter__ method.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qcaches the original builtins.__import__ object in an instance of the class, and replaces it with AspectHooks.__import__, in its __enter__ method.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QThis is reversed by replacing builtins.__import__ with the cached object in its __exit__ function.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QThis chapter introduces a suitable system, RPGLite, a game for which play can be modelled simply and augmented using .\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QTo investigate whether models can be augmented using , can be employed to produce models — but a system is required which it can model.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q summarises standard definitions of learning as “ a relatively permanent change in behavior as a result of practice or experience”.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QOur definition consists of three components: (1) changes in the behavior of the organism, (2) a regularity in the environment of the organism, and (3) a causal relation between the regularity in the environment and the changes in behavior of the organism.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QThe mobile game contributes this by supporting the comparison of these models' output against the collected data, and providing the basis of a model which can be augmented using .\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qpossible states for any RPGLite game, assuming maximum health values of \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Q(I made slight edits when adding this revnote, maybe the para can be condensed.\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QJ: make more concise.\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QThe history of moves made, and the times those moves were made The players involved and the winning player of each game (by username as no personally identifying data was collected) The ELO ELO undefined scores of players in each game The characters chosen by each player The “score” of each player J: “score” is vague.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QTo investigate whether models can be augmented using , can be employed to produce models — but a system to model is required.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QAttempt at subfigure layout given below, but it looks hideous and the old version's frankly better, so keeping it unless I have time to mess with the layouts.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qis that it was essential to make use of our personal professional networks to advertise the game and build a community.\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QActive Player Attacking Character Opponent Opponent's Targeted Character Roll To Hit p1 G p2 A 65\\E$"}
